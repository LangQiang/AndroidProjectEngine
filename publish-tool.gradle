def printMsg(msg) {
    println String.format("---------  %s  ---------", msg)
}

var groupIdStr = 'io.github.langqiang'

task sourceJar(type: Jar) {
    switch (project.publishComponentType) {
        case 'aar-debug':
            from android.sourceSets.main.java.srcDirs
            break
        case 'aar-release':
            from android.sourceSets.main.java.srcDirs
            break
        case 'apk-debug':
            from android.sourceSets.main.java.srcDirs
            break
        case 'apk-release':
            from android.sourceSets.main.java.srcDirs
            break
        case 'java':
            from sourceSets.main.allSource
            break
        default:
//                        忽略平台 web
            break
    }
}

def publishCloser = {
    publishing {
        repositories {
            maven {
                if (project.publishVersion.endsWith("SNAPSHOT")) {
                    url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
                    printMsg('repo maven snapshot')
                } else {
                    url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                    printMsg('repo maven release')
                }
                printMsg('repo maven credentials :' + sonaTypeUserName + " " + sonaTypePassWord)
                credentials {
                    username sonaTypeUserName
                    password sonaTypePassWord
                }
            }
        }

        publications {
            MyPublication(MavenPublication) {
                groupId groupIdStr
                artifactId project.publishArtifactName
                version project.publishVersion
                printMsg('publications type ' + project.publishComponentType)
                switch (project.publishComponentType) {
                    case 'aar-debug':
                        from components.debug
                        break
                    case 'aar-release':
                        from components.release
                        artifact sourceJar {
                            classifier "sources"
                        }
                        break
                    case 'apk-debug':
                        from components.debug_apk
                        break
                    case 'apk-release':
                        from components.release_apk
                        artifact sourceJar {
                            classifier "sources"
                        }
                        break
                    case 'java':
                        from components.java
                        break
                    default:
//                        忽略平台 web
                        break
                }

            }
        }
    }
}

if ("java" == project.publishComponentType) {
    publishCloser('java')
} else {
    afterEvaluate {
        publishCloser('java')
    }
}


afterEvaluate {
    publish.doLast {
        var ret = ""
        if (project.publishVersion.endsWith("SNAPSHOT")) {
            ret += 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        } else {
            ret += 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
        }
        ret += groupIdStr.replaceAll("\\.", "/")
        ret += "/"
        ret += project.publishArtifactName
        ret += "/"
        ret += project.publishVersion
        printMsg(ret)
    }
}
